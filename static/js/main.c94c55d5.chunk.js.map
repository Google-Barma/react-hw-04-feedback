{"version":3,"sources":["components/Section.jsx","components/Notification.jsx","components/Statistics.jsx","redux/statistics-actions.js","components/FeedbackOptions.jsx","components/App.jsx","redux/statistics-reducer.js","redux/store.js","index.js"],"names":["Section","title","children","Notification","message","culcTotal","state","Object","values","statistics","reduce","total","value","percentage","Math","round","good","connect","names","keys","map","name","increment","createAction","options","dispatch","onClickBtn","type","idx","onClick","e","target","textContent","App","createReducer","neutral","bad","payload","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","rootReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAEe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,6BAAKD,IACJC,KCJQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,IC2Bb,IAAMC,EAAY,SAAAC,GAAK,OACrBC,OAAOC,OAAOF,EAAMG,YAAYC,QAAO,SAACC,EAAOC,GAAR,OAAkBD,EAAQC,IAAO,IAEpEC,EAAa,SAACP,EAAOK,GAAR,OACjBA,EAAQ,EAAIG,KAAKC,MAAOT,EAAMG,WAAWO,KAAOL,EAAS,KAAO,MAQnDM,eANS,SAAAX,GAAK,MAAK,CAChCA,MAAOA,EAAMG,WACbE,MAAON,EAAUC,GACjBO,WAAYA,EAAWP,EAAOD,EAAUC,OAG3BW,EAtCf,YAAmD,IAA7BX,EAA4B,EAA5BA,MAAOK,EAAqB,EAArBA,MAAOE,EAAc,EAAdA,WAC5BK,EAAQX,OAAOY,KAAKb,GAE1B,OACE,cAACN,EAAD,CAASC,MAAO,aAAhB,SACGU,EAAQ,EACP,qCACE,6BACGO,EAAME,KAAI,SAAAC,GAAI,OACb,+BACGA,EADH,KACWf,EAAMe,KADRA,QAKb,+BACE,yCAAYV,KACZ,8CAAiBE,WAIrB,cAACV,EAAD,CAAcC,QAAS,2B,OCtBlBkB,EAAYC,YAAa,wBCoBtC,IAQeN,eARS,SAAAX,GAAK,MAAK,CAChCkB,QAASlB,EAAMG,eAGU,SAAAgB,GAAQ,MAAK,CACtCC,WAAY,SAAAC,GAAI,OAAIF,EAASH,EAAUK,QAG1BV,EA1Bf,YAAmD,IAAxBO,EAAuB,EAAvBA,QAASE,EAAc,EAAdA,WAC5BR,EAAQX,OAAOY,KAAKK,GAE1B,OACE,cAACxB,EAAD,CAASC,MAAO,wBAAhB,SACGiB,EAAME,KAAI,SAACC,EAAMO,GAAP,OACT,wBAEED,KAAK,SACLE,QAAS,SAAAC,GAAC,OAAIJ,EAAWI,EAAEC,OAAOC,cAHpC,SAKGX,GAJIO,WCRA,SAASK,IACtB,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,O,kCCJAxB,EAAayB,YACjB,CAAElB,KAAM,EAAGmB,QAAS,EAAGC,IAAK,GADE,eAG3Bd,GAAY,SAAChB,EAAD,OAAU+B,EAAV,EAAUA,QAAV,mBAAC,eACT/B,GADQ,kBAEV+B,EAAU/B,EAAM+B,GAAW,QAKnBC,cAAgB,CAC7B7B,e,iBCVI8B,EAAU,sBAAOC,eAAP,CAA+BC,MAQhCC,EANDC,YAAe,CAC3BC,QAASC,EACTN,aACAO,UAAUC,ICHZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAACT,EAAD,QAGJkB,SAASC,eAAe,W","file":"static/js/main.c94c55d5.chunk.js","sourcesContent":["import propTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: propTypes.string,\n};\n","import propTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: propTypes.string.isRequired,\n};\n","import { connect } from 'react-redux';\nimport Section from './Section';\nimport Notification from './Notification';\n\nfunction Statistics({ state, total, percentage }) {\n  const names = Object.keys(state);\n\n  return (\n    <Section title={'Statistics'}>\n      {total > 0 ? (\n        <>\n          <ul>\n            {names.map(name => (\n              <li key={name}>\n                {name}: {state[name]}\n              </li>\n            ))}\n          </ul>\n          <ul>\n            <li>total: {total}</li>\n            <li>percentage: {percentage}</li>\n          </ul>\n        </>\n      ) : (\n        <Notification message={'No feedback given'} />\n      )}\n    </Section>\n  );\n}\n\nconst culcTotal = state =>\n  Object.values(state.statistics).reduce((total, value) => total + value, 0);\n\nconst percentage = (state, total) =>\n  total > 0 ? Math.round((state.statistics.good / total) * 100) : null;\n\nconst mapStateToProps = state => ({\n  state: state.statistics,\n  total: culcTotal(state),\n  percentage: percentage(state, culcTotal(state)),\n});\n\nexport default connect(mapStateToProps)(Statistics);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const increment = createAction('statistics/increment');\n","import { connect } from 'react-redux';\nimport { increment } from '../redux/statistics-actions';\nimport Section from './Section';\n\nfunction FeedbackOptions({ options, onClickBtn }) {\n  const names = Object.keys(options);\n\n  return (\n    <Section title={'Please leave feedback'}>\n      {names.map((name, idx) => (\n        <button\n          key={idx}\n          type=\"button\"\n          onClick={e => onClickBtn(e.target.textContent)}\n        >\n          {name}\n        </button>\n      ))}\n    </Section>\n  );\n}\n\nconst mapStateToProps = state => ({\n  options: state.statistics,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClickBtn: type => dispatch(increment(type)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedbackOptions);\n","import Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\n\nexport default function App() {\n  return (\n    <>\n      <FeedbackOptions />\n      <Statistics />\n    </>\n  );\n}\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\nimport { increment } from './statistics-actions';\n\nconst statistics = createReducer(\n  { good: 0, neutral: 0, bad: 0 },\n  {\n    [increment]: (state, { payload }) => ({\n      ...state,\n      [payload]: state[payload] + 1,\n    }),\n  },\n);\n\nexport default combineReducers({\n  statistics,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport rootReducer from './statistics-reducer';\nimport logger from 'redux-logger';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}